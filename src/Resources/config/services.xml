<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="terminal42.rokka_apiplatform_bridge.sourceimages_requestmatcher" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument /> <!-- Set by extension -->
        </service>

        <service id="Terminal42\RokkaApiPlatformBridge\EventListener\PostReadAndWriteSourceImageListener" public="false">
            <argument type="service" id="terminal42.rokka_apiplatform_bridge.sourceimages_requestmatcher" />
            <argument type="service" id="Terminal42\RokkaApiPlatformBridge\Rokka\SourceImageNormalizer" />
            <tag name="kernel.event_subscriber" />
        </service>

        <service id="Terminal42\RokkaApiPlatformBridge\Rokka\SourceImageNormalizer" public="false">
            <argument /> <!-- Set by extension -->
        </service>

        <service id="Terminal42\RokkaApiPlatformBridge\Rokka\CollectionDataProvider" public="false">
            <argument type="service" id="terminal42.rokka_apiplatform_bridge.sourceimages_requestmatcher" />
            <argument type="service" id="request_stack" />
            <argument type="service" id="rokka.client.image" />
            <tag name="api_platform.collection_data_provider" />
        </service>

        <service id="Terminal42\RokkaApiPlatformBridge\Rokka\ItemDataProvider" public="false">
            <argument type="service" id="terminal42.rokka_apiplatform_bridge.sourceimages_requestmatcher" />
            <argument type="service" id="request_stack" />
            <argument type="service" id="rokka.client.image" />
            <tag name="api_platform.item_data_provider" />
        </service>

        <service id="Terminal42\RokkaApiPlatformBridge\Rokka\DataPersister" public="false">
            <argument type="service" id="rokka.client.image" />
            <tag name="api_platform.data_persister" />
        </service>
    </services>
    
</container>
